@startuml

/'
    input1: const Scan2D &scan
    input2: const Pose2D &pose
'/

(*) --> "const vector<LPoint2D> &lps = scan.lps"
--> "const double (*R)[2] = pose.Rmat"
--> "double tx = pose.tx
double ty = pose.ty"
--> "vector<LPoint2D> scanG"
--> if "0 <= size_t i < lps.size()" as for_i then
--> [Yes] "const LPoint2D &lp = lps[i]"
--> if "lp.type == ISOLATE" then
--> [Yes] for_i
else
--> [No] "double x = R[0][0] * lp.x + R[0][1] * lp.y + tx
double y = R[1][0] * lp.x + R[1][1] * lp.y + ty"
--> "double nx = R[0][0] * lp.nx + R[0][1] * lp.ny
double ny = R[1][0] * lp.nx + R[1][1] * lp.ny"
--> "LPoint2D mlp(cnt, x, y)
mlp.setNormal(nx, ny)
mlp.setType(lp.type)
scanG.emplace_back(mlp)"
--> for_i
else
for_i -> [No] "pcmap->addPose(pose)
pcmap->addPoints(scanG)
pcmap->setLastPose(pose)
pcmap->setLastScan(scan)
pcmap->makeLocalMap()"
--> (*)

@enduml